#!/usr/bin/env bash

source <%= @restic_path %>/config.sh

### --- LOGIC --- ###

export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID"
export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY"
export GOGC=$GOGC

RUN_RESTIC="$RESTIC_BIN --repo $REPO --password-file $PASSWORD_FILE --limit-upload $UPLOAD_LIMIT_KiB --no-cache"
BACKUP_NEEDED=0

# check if password file exists
if [ ! -f $PASSWORD_FILE ]; then
    echo "Password file $PASSWORD_FILE not found, exiting"
    exit 1
fi

# check if backup process is running
NUM_OF_PROC=`ps aux | grep restic | grep backup | wc -l`
if [ "$NUM_OF_PROC" = "1" ]; then
    echo "Restic backup process still running. exiting"
    ps aux | grep restic | grep backup | awk '{print "Started at: "$9 " || Running for: " $10}'
    exit 0
fi

# check if backup has been made
NUM_OF_BACKUP=`$RUN_RESTIC snapshots | grep ^0\ snapshots | wc -l`

if [ "$NUM_OF_BACKUP" = "0" ] ; then
    echo "Initializing Repo"
    $RUN_RESTIC init
    NUM_OF_BACKUP=`$RUN_RESTIC snapshots | grep ^0\ snapshots | wc -l`
fi

if [ "$NUM_OF_BACKUP" = "1" ] ; then
    echo "No backups made"
    BACKUP_NEEDED=1
fi

# check if backup is needed since yesterday
if [ "$BACKUP_NEEDED" -eq 0 ] ; then
   LAST_BACKUP=`$RUN_RESTIC snapshots --last | tail -n 3 | head -n 1 | awk -F '  ' '{print $2}'`
   LAST_BACKUP_EPOCH=`date +%s -d "$LAST_BACKUP"`
   PREV_TIME_BACKUP=`date +%s -d "$TIME_BETWEEN_BACKUP"`
   if [ "$PREV_TIME_BACKUP" -gt "$LAST_BACKUP_EPOCH" ]; then
       echo "No backup since $TIME_BETWEEN_BACKUP, so backup needed. Last backup was $LAST_BACKUP"
       BACKUP_NEEDED=1
   fi
fi

if [ "$BACKUP_NEEDED" -eq 1 ] ; then
    $RUN_RESTIC backup $BACKUP_PATH --exclude-file=$EXCLUDE_FILE 2>&1 >> /var/log/restic/restic.log
else
    echo "$(date '+%Y-%m-%d %H:%M:%S') -- No backup required"
fi

